fullnameOverride: prometheus

prometheus:
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        metadata:
          annotations:
            folder: prometheus/data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
          storageClassName: nfs-ssd-1

grafana:
  admin:
    existingSecret: grafana-admin
    userKey: user
    passwordKey: password
  sidecar:
    dashboards:
      annotations:
        grafana_folder: Default
      folderAnnotation: grafana_folder
      provider:
        name: sidecar
        disableDelete: true
        allowUiUpdates: false
        foldersFromFilesStructure: true
  defaultDashboardsTimezone: browser
  grafana.ini:
    auth.generic_oauth:
      name: Authentik
      enabled: true
      client_id: $__file{/etc/secrets/generic-oauth/client_id}
      client_secret: $__file{/etc/secrets/generic-oauth/client_secret}
      scopes: openid profile email
      use_refresh_token: true
      role_attribute_path: contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'
  extraSecretMounts:
    - name: generic-oauth
      secretName: prometheus-grafana-generic-oauth
      mountPath: /etc/secrets/generic-oauth
      defaultMode: 0440
      readOnly: true

alertmanager:
  config:
    route:
      receiver: discord
      routes:
        - match:
            alertname: Watchdog
          receiver: 'null'
    receivers:
      - name: 'null'
      - name: discord
        slack_configs:
          - api_url_file: /etc/alertmanager/secrets/prometheus-alertmanager-discord/webhook_url
#        discord_configs:
#          - webhook_url_file: /etc/alertmanager/secrets/prometheus-alertmanager-discord/webhook_url
  alertmanagerSpec:
    secrets:
      - prometheus-alertmanager-discord

kube-state-metrics:
  selfMonitor:
    enabled: true
